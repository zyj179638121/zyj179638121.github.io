---
layout: post
title: "iOS屏蔽emoji表情"
date: 2016-08-11 09:49:46 +0800
comments: true
categories: 
---

**iOS屏蔽emoji表情,直接上代码**   

`Swift版本`   

```
func textViewDidChange(textView: UITextView) {
        let textRange = textView.selectedRange
        textView.text = self.disableEmoji(textView.text)
        textView.selectedRange = textRange
    }

```
```
func disableEmoji(text:String) -> String{
        
        var regex:NSRegularExpression?
        do {
            try regex = NSRegularExpression.init(pattern: "[^\\u0020-\\u007E\\u00A0-\\u00BE\\u2E80-\\uA4CF\\uF900-\\uFAFF\\uFE30-\\uFE4F\\uFF00-\\uFFEF\\u0080-\\u009F\\u2000-\\u201f\r\n]", options: .CaseInsensitive)
        }catch{
            print(error)
        }
        
        let modifiedString = regex!.stringByReplacingMatchesInString(text as String, options: .ReportProgress, range: NSMakeRange(0, text.characters.count), withTemplate: "")
        return modifiedString
    }
```   

`OC版本`

```
- (void)textViewDidChange:(UITextView *)textView
{
    NSRange textRange = [textView selectedRange];
    [textView setText:[self disable_emoji:[textView text]]];
    [textView setSelectedRange:textRange];
}

```

```
- (NSString *)disable_emoji:(NSString *)text
{
    NSRegularExpression *regex = [NSRegularExpression regularExpressionWithPattern:@"[^\\u0020-\\u007E\\u00A0-\\u00BE\\u2E80-\\uA4CF\\uF900-\\uFAFF\\uFE30-\\uFE4F\\uFF00-\\uFFEF\\u0080-\\u009F\\u2000-\\u201f\r\n]" options:NSRegularExpressionCaseInsensitive error:nil];
    NSString *modifiedString = [regex stringByReplacingMatchesInString:text
                                                               options:0
                                                                 range:NSMakeRange(0, [text length])
                                                          withTemplate:@""];
    return modifiedString;
}
```


